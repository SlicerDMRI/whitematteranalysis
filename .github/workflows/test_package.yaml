name: test, package

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      # max-parallel: 6
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8']

    steps:
    - name: Check out repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    # - name: Cache pip
    #   uses: actions/cache@v2
    #   id: cache
    #   with:
    #     path: ${{ env.pythonLocation }}
    #     # Look to see if there is a cache hit for the corresponding requirements files
    #     key: ${{ env.pythonLocation }}-${{ hashFiles('requirements/*') }}
    #     restore-keys: |
    #       ${{ env.pythonLocation }}-

    - name: Install dependencies
      # if: steps.cache.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade --user pip setuptools pytest-cov
        python --version
        pip --version
        pip list

    - name: Run tests
      run: |
        # tox --sitepackages
        python setup.py install
        python -c 'import whitematteranalysis'
        # coverage run --source whitematteranalysis -m pytest whitematteranalysis -o junit_family=xunit2 -v --doctest-modules --junitxml=junit/test-results-${{ runner.os }}-${{ matrix.python-version }}.xml

    - name: Upload pytest test results
      uses: actions/upload-artifact@master
      with:
        name: pytest-results-${{ runner.os }}-${{ matrix.python-version }}
        path: junit/test-results-${{ runner.os }}-${{ matrix.python-version }}.xml
      # Use always() to always run this step to publish test results when there are test failures
      if: always()

    - name: Package Setup
    # - name: Run tests with tox
      run: |
        # pip install build
        # check-manifest
        python setup.py install
        # twine check dist/
        # tox --sitepackages
        # python -m tox

    # - name: Statistics
      # if: success()
      # run: |
      #   coverage report
